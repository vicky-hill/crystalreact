/* HTML ===========================================================================

    <ul class="pagination" onClick={selectPage}>
        <li class="page-item page-icon">
            <a class="page-link" href="#">
                <span>&laquo;</span>
            </a>
        </li>
        <li class="page-item"><a class="page-link" href="#">1</a></li>
        <li class="page-item"><a class="page-link" href="#">2</a></li>
        <li class="page-item"><a class="page-link" href="#">3</a></li>
        <li class="page-item page-icon">
            <a class="page-link" href="#">
                <span>&raquo;</span>
            </a>
        </li>
    </ul>

================================================================================ */

/* JavaScript =====================================================================

    const selectPage = (e) => {
        const pages = document.getElementsByClassName('page-item');
        const clickedPage = e.target.parentElement;

        // Deactivate all pages that aren't the target
        for (let i = 0; i < pages.length; i++) {
            if(!clickedPage.classList.contains('page-icon')) {
                if (pages[i] !== clickedPage) {
                    pages[i].classList.remove('active');
                } else {
                    pages[i].classList.add('active');
                }
            }
        }
    }

================================================================================ */

/* React ==========================================================================

import React, { useState } from 'react';

// Props
=========================================== 
// pages

const Pagination = ({ pages }) => {

    const [active, setActive] = useState(0);

    const activatePage = (e) => {
        e.preventDefault();
        setActive(Number(e.target.id));
    }

    const nextPage = (e) => {
        e.preventDefault();
        if(active === pages.length - 1) return
        setActive(active + 1);
    }

    const previousPage = (e) => {
        e.preventDefault();
        if(active === 0) return
        setActive(active - 1);
    }

    return (
        <section id="pagination">
            <ul className="pagination">
                <li className="page-item page-icon" onClick={previousPage}>
                    <a className="page-link" href="#">
                        <span>&laquo;</span>
                    </a>
                </li>

                {
                    pages.map((page, i) => (
                        <li key={i} id={i} className={`page-item ${active === i ? 'active' : ''}`} onClick={activatePage}>
                            <a id={i} className="page-link" href="#">{page}</a>
                        </li>
                    ))
                }

                <li className="page-item page-icon" onClick={nextPage}>
                    <a className="page-link" href="#">
                        <span>&raquo;</span>
                    </a>
                </li>
            </ul>
        </section>
    )
}

export default Pagination;

================================================================================ */

.pagination {
    display: flex;
}

.page-item:last-child .page-link {
    border-bottom-right-radius: 3px;
    border-top-right-radius: 3px;
}   

.page-item:first-child .page-link {
    border-bottom-left-radius: 3px;
    border-top-left-radius: 3px;
}   

.page-item:not(:first-child) .page-link {
    margin-left: -1px;
}

.page-item.active .page-link {
    z-index: $z-pagination-active;
    color: #fff;
    border-color: $primary;
    background-color: $primary;
}

.page-link {
    position: relative;
    padding: 6px 12px;
    display: block;
    color: $dark;
    background-color: #fff;
    border: 1px solid #dee2e6;
    transition:  color .15s ease-in-out, background-color .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out;
}

.page-link:hover {
    z-index: $z-pagination-hover;
    background-color: #e9ecef;
}

.page-link:focus {
    z-index: $z-pagination-hover;
    color: $primary;
    background-color: #e9ecef;
    box-shadow: 0 0 0 3px rgba($primary, .25);
}