.input-container {
    margin-bottom: 2.5rem;
}

/* ================================================================================
   INPUTS & SELECT
================================================================================ */

/* HTML ===========================================================================

    <div className="input-container">
        <label htmlFor="input">Username</label>
        <input className="input" type="text" placeholder="Enter username" />
    </div>

================================================================================ */


.input-container .input, .input-container .select {
    display: block;
    width: 100%;
    margin-top: 1rem;
    margin-left: 0;
    margin-right: 0;
    color: #495058;
    line-height: inherit;
}

.input, .select {
    padding: 7px 14px;
    border-radius: 4px;
    font-family: Lato;
    font-size: 1.5rem;
    border: 1px solid gainsboro;
    background-color: white;
}


.input:focus, .select:focus {
    box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.25);
    outline: none;
    border: 1px solid rgba(0, 123, 255, 0.486);
}

.input-container label {
    font-family: Lato;
    font-size: 1.6rem;
    color: #212529;
}

/* ============================================================================================
   VALIDATION
============================================================================================ */

/* HTML =======================================================================================

    <div className="input-container">
        <label htmlFor="input">Password</label>
        <input className="input valid-feedback" type="password" placeholder="Enter password" />
        <small className="valid-feedback">Looks good</small>
    </div>

============================================================================================ */

.valid-feedback {
    color: #57CC9D;
}

.input.valid-feedback {
    border-color: #57CC9D;
}


.input.valid-feedback:focus, .input.valid-feedback:active {
    box-shadow: 0 0 0 3px rgba(#57CC9D, 0.25);
}

.invalid-feedback {
    color: #DD3444;
}    

.input.invalid-feedback {
    border-color: #dd3444;
}

.input.invalid-feedback:focus, .input.invalid-feedback:active {
    box-shadow: 0 0 0 3px rgba(221, 52, 68, 0.25);
}


/* ================================================================================
   DEFAULT RADIO/CHECKBOX
================================================================================ */

.default-checkbox, .default-radio {
    margin-right: 10px;
    margin-bottom: 25px;
}

label.default-label {
    margin-right: 30px;
}

.input:disabled, .select:disabled {
    background: #ECF0F1;
}

.input:disabled::placeholder {
    color: #95A5A6;
}


/* ================================================================================
   RADIO BUTTON
================================================================================ */

/* HTML ===========================================================================
    
    <div className="input-container">
        <label htmlFor="visual" className="radio"> 
            <input type="radio" name="radio" id="visual" className="radio-input" />
            <div className="radio-circle"></div>
            <div className="radio-label">Visual Studio Code</div> 
        </label>
    </div>

================================================================================ */

.radio {
    display: inline-flex;
    align-items: center;
    cursor: pointer;
    margin-right: 30px;
    color: #95A5A6;
}

.radio-input {
    display: none;
}

.radio-circle {
    width: 1.25em;
    height: 1.25em;
    border: 1px solid #B9C1C6;
    border-radius:  50%;
    margin-right: 10px;
    padding: 3px; 
}

.radio-circle::after {
    content: '';
    width: 100%;
    height: 100%;
    display: block;
    background: #007bff;
    border-radius:  50%;
    transform: scale(0);
    transition: transform 0.15s;
}

.radio-input:checked + .radio-circle::after {
    transform: scale(1);
}

.radio-input:disabled + .radio-circle {
    border-color: #B9C1C6;
    padding: 0;
}

.radio-input:disabled + .radio-circle::after {
    transform: scale(1);
    background: #ECF0F1;
}

.radio-input:disabled ~ .radio-label {
    color: #95A5A6;
}

/* ================================================================================
   CHECKBOX
================================================================================ */

/* HTML ===========================================================================
   
    <div className="input-container">
        <label htmlFor="mac" className="checkbox">
            <input type="checkbox" name="mac" className="checkbox-input" id="mac"/>
            <div className="checkbox-box"></div>
                <div className="checkbox-label">Mac</div> 
        </label>
    </div>

================================================================================ */

.checkbox {
    display: inline-flex;
    align-items: center;
    cursor: pointer;
    margin-right: 30px;
}

.checkbox-input {
    display: none;
}

.checkbox-box {
    width: 1.25em;
    height: 1.25em;
    border: 1px solid #B9C1C6;
    border-radius: 3px;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-right: 10px;
    flex-shrink: 0;
    transition: background 0.15s, border-color 0.15s;
}

.checkbox-box::after {
    content: '\2714';
    font-size: 0.8em;
    color: #fff;
    transform: scale(0);
    transition: transform 0.15s;
} 
.checkbox-input:checked + .checkbox-box {
    background: #007bff;
    border-color: #007bff;
} 

.checkbox-input:checked + .checkbox-box::after {
    transform: scale(1);
} 

.checkbox-input:disabled ~ .checkbox-label {
    color: #95A5A6;
}

.checkbox-input:disabled + .checkbox-box {
    background: #ECF0F1;
}


/* ================================================================================
   TOGGLE
================================================================================ */

/* HTML ===========================================================================

    <div className="input-container">
        <label htmlFor="darkmode" className="toggle">
            <input type="checkbox" id="darkmode" className="toggle-input" />
            <div className="toggle-fill"></div>
            <div className="toggle-label">Darkmode</div> 
        </label>
    </div>

================================================================================ */

.toggle {
    --width: 40px;
    --height: calc(var(--width) / 2);
    --border-radius: calc(var(--height) /2);
    display: inline-flex;
    align-items: center;
    margin-right: 30px;
    cursor: pointer;
}

.toggle-input {
    display: none;
}

.toggle-fill {
    position: relative;
    width: var(--width);
    height: var(--height);
    border-radius: var(--border-radius);
    background: #dddddd;
    transition: background 0.2s;
    margin-right: 10px;
}

.toggle-input:checked ~ .toggle-fill {
    background: #007bff;
}

.toggle-fill::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    height: var(--height);
    width: var(--height);
    background: #fff;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.25);
    border-radius: var(--border-radius);
    transition: transform 0.2s; 
}

.toggle-input:checked ~ .toggle-fill::after {
    transform: translateX(var(--height));
}

.toggle-input:disabled ~ .toggle-label {
    color: #95A5A6;
}

.toggle-input:disabled ~ .toggle-fill {
    background: #ECF0F1;
}


/* ======================================================================================================
   RADIO GROUP
====================================================================================================== */

/* HTML =================================================================================================

    <div className="input-container radio-group">
        <input className="radio-group-input" type="radio" value="option1" name="myRadio" id="myRadio1"/>
        <label className="radio-group-label" htmlFor="myRadio1">10</label>

        <input className="radio-group-input" type="radio" value="option2" name="myRadio" id="myRadio2"/>
        <label className="radio-group-label" htmlFor="myRadio2">20</label>

        <input className="radio-group-input" type="radio" value="option3" name="myRadio" id="myRadio3"/>
        <label className="radio-group-label" htmlFor="myRadio3">30</label>
    </div>

====================================================================================================== */

.radio-group {
    display: inline-flex;
    overflow: hidden;
    border-radius: 15px;
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.25);
}

.radio-group-input {
    display: none; 
}

.radio-group-label {
    padding: 8px 14px; 
    font-size: 1.4rem;
    font-family: inherit;
    color: #fff !important;
    background: #007bff; 
    cursor: pointer;
    transition: background .1s;
}

.radio-group-label:not(:last-of-type) {
    border-right: 1px solid #016fe6;
}

.radio-group-input:checked + .radio-group-label {
    background: #0065d1; 
}


/* ===========================================================================================
   FILE UPLOAD
=========================================================================================== */

/* HTML ======================================================================================
    
    <div className="input-container">
        <input type="file" name="" id="real-file" hidden="hidden" />
        <button className="btn" type="button" id="custom-button">Browse</button>
        <span className="file-label" id="custom-text">No file chosen</span>
    </div>

=========================================================================================== */

/* JavaScript ================================================================================
    
    const realFileBtn = document.getElementById('real-file');
    const customBtn = document.getElementById('custom-button');
    const customText = document.getElementById('custom-text');

    customBtn.addEventListener('click', function() {
        realFileBtn.click();
    })

    realFileBtn.addEventListener('change', function() {
        if(realFileBtn.value) {
            customText.innerHTML = realFileBtn.value.match(/[\/\\]([\w\d\s\.\-\(\)]+)$/)[1];
        } else {
            customText.innerHTML = "No file chosen";
        }
    })

    React:

    function realFileClick() {
        const realFileBtn = document.getElementById('real-file');
        realFileBtn.click();
    }

    function handleFile() {
        const realFileBtn = document.getElementById('real-file');
        const customText = document.getElementById('custom-text');

        if (realFileBtn.value) {
            customText.innerHTML = realFileBtn.value.match(/[\/\\]([\w\d\s\.\-\(\)]+)$/)[1];
        } else {
            customText.innerHTML = "No file chosen";
        }
    }

============================================================================================ */

.file-label {
    margin-left: 15px;
    color: #95A5A6;
}